cabal-version: 3.0
name:          tetris
version:       1.0.0
synopsis:      A functional Tetris game in Haskell
description:   ASCII-based Tetris game converted from Java to Haskell,
               demonstrating functional programming principles and
               immutable data structures.
license:       MIT
author:        Tetris Haskell Conversion
maintainer:    tetris@example.com
category:      Game
build-type:    Simple

common common-options
  ghc-options:
    -Wall
    -Wcompat
    -Widentities
    -Wincomplete-uni-patterns
    -Wincomplete-record-updates
    -Wredundant-constraints
    -Wnoncanonical-monad-instances
    -Wunused-packages

  default-language: Haskell2010

library
  import: common-options
  exposed-modules:
    Tetris.Types
    Tetris.Pieces
    Tetris.Board
    Tetris.Game
    Tetris.Console
    Tetris.Utils
  hs-source-dirs: src
  build-depends:
      base >=4.7 && <5
    , random >=1.1
    , ansi-terminal >=0.11

executable tetris
  import: common-options
  main-is: Main.hs
  hs-source-dirs: src
  build-depends:
      base >=4.7 && <5
    , tetris
    , random >=1.1
    , ansi-terminal >=0.11
  ghc-options: -threaded -rtsopts -with-rtsopts=-N

test-suite tetris-test
  import: common-options
  type: exitcode-stdio-1.0
  main-is: Spec.hs
  hs-source-dirs: test
  build-depends:
      base >=4.7 && <5
    , tetris
    , hspec >=2.7
    , QuickCheck >=2.14
  ghc-options: -threaded -rtsopts -with-rtsopts=-N
  other-modules:
    Tetris.TypesSpec
    Tetris.PiecesSpec
    Tetris.BoardSpec
    Tetris.GameSpec