### 8. Flujo de interacción: Game Loop

```plantuml
@startuml
participant Game
participant Tetris
participant Board
participant BoardView
participant Console
participant PieceFactory

Game -> Tetris: new Tetris(10, 20)
activate Tetris
Tetris -> Board: new Board(width, height)
Tetris -> BoardView: new BoardView(console)
return

Game -> Tetris: gameLoop()
activate Tetris

Tetris -> Tetris: spawnNewPiece()
activate Tetris
Tetris -> PieceFactory: createIPiece()
return piece
Tetris -> Board: setCurrentPiece(piece)
deactivate Tetris

loop while gameRunning
    Tetris -> BoardView: display(board, currentPieceView)
    activate BoardView
    BoardView -> Board: getGrid()
    BoardView -> Console: clearScreen()
    BoardView -> Console: writeln(...)
    deactivate BoardView
    
    Tetris -> Console: readString("Comando: ")
    return input
    
    Tetris -> Tetris: processUserInput(input)
    activate Tetris
    alt comando válido
        Tetris -> Board: canMovePiece(piece, deltaX, deltaY)
        Board --> Tetris: boolean
        opt puede mover
            Tetris -> Piece: moveLeft/Right()
        end
    end
    deactivate Tetris
    
    Tetris -> Board: canMovePiece(piece, 0, 1)
    alt puede caer
        Tetris -> Piece: moveDown()
    else no puede caer
        Tetris -> Board: placePiece(piece, symbol)
        Tetris -> Board: clearCompleteLines()
        return linesCleared
        Tetris -> Tetris: score += linesCleared * 100
        Tetris -> Tetris: spawnNewPiece()
    end
end

deactivate Tetris
@enduml